
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000284  00000318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000284  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800110  00800110  00000328  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000358  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a29  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ea  00000000  00000000  00000df1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ff  00000000  00000000  000014db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000018dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e3  00000000  00000000  00001920  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001b0  00000000  00000000  00001d03  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001eb3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e8       	ldi	r30, 0x84	; 132
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 32       	cpi	r26, 0x25	; 37
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 68 00 	call	0xd0	; 0xd0 <main>
  9e:	0c 94 40 01 	jmp	0x280	; 0x280 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <usartinit>:
	}
}

void usartinit()
{
	UBRR0H =(unsigned char)(UBRR_VALUE>>8);
  a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L =(unsigned char) (UBRR_VALUE);
  aa:	87 e6       	ldi	r24, 0x67	; 103
  ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B =(1<<RXCIE0) | (1<<RXEN0) | (1<<TXEN0);
  b0:	88 e9       	ldi	r24, 0x98	; 152
  b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C =(3<<UCSZ00);
  b6:	86 e0       	ldi	r24, 0x06	; 6
  b8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  bc:	08 95       	ret

000000be <rxvalue>:
	
}
unsigned char rxvalue(void)
{
	while(!(UCSR0A & (1<<RXC0)));
  be:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  c2:	88 23       	and	r24, r24
  c4:	e4 f7       	brge	.-8      	; 0xbe <rxvalue>
	{
		rxdata=UDR0;
  c6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  ca:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <rxdata>
		return rxdata;
	}
  ce:	08 95       	ret

000000d0 <main>:
unsigned char cmd4[]={"Hi"};
unsigned char cmd5[]={"94774688266"};

int main ()
{
	DDRD|=0B00001000;
  d0:	8a b1       	in	r24, 0x0a	; 10
  d2:	88 60       	ori	r24, 0x08	; 8
  d4:	8a b9       	out	0x0a, r24	; 10
	DDRD&=0B11111011;
  d6:	8a b1       	in	r24, 0x0a	; 10
  d8:	8b 7f       	andi	r24, 0xFB	; 251
  da:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  dc:	2f ef       	ldi	r18, 0xFF	; 255
  de:	80 e7       	ldi	r24, 0x70	; 112
  e0:	92 e0       	ldi	r25, 0x02	; 2
  e2:	21 50       	subi	r18, 0x01	; 1
  e4:	80 40       	sbci	r24, 0x00	; 0
  e6:	90 40       	sbci	r25, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <main+0x12>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x1c>
  ec:	00 00       	nop
	
	_delay_ms(50);
	usartinit();
  ee:	0e 94 53 00 	call	0xa6	; 0xa6 <usartinit>
	
	UDR0 = ('"');
  f2:	82 e2       	ldi	r24, 0x22	; 34
  f4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  f8:	2f ef       	ldi	r18, 0xFF	; 255
  fa:	81 ee       	ldi	r24, 0xE1	; 225
  fc:	94 e0       	ldi	r25, 0x04	; 4
  fe:	21 50       	subi	r18, 0x01	; 1
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	90 40       	sbci	r25, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x2e>
 106:	00 c0       	rjmp	.+0      	; 0x108 <main+0x38>
 108:	00 00       	nop
	_delay_ms(100);

	for(z=0;cmd5[z]!=' ';z++)
 10a:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <z+0x1>
 10e:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <z>
 112:	14 c0       	rjmp	.+40     	; 0x13c <main+0x6c>
	{
		UDR0 = cmd5[z];
 114:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 118:	2f ef       	ldi	r18, 0xFF	; 255
 11a:	81 ee       	ldi	r24, 0xE1	; 225
 11c:	94 e0       	ldi	r25, 0x04	; 4
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0x4e>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0x58>
 128:	00 00       	nop
	usartinit();
	
	UDR0 = ('"');
	_delay_ms(100);

	for(z=0;cmd5[z]!=' ';z++)
 12a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <z>
 12e:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <z+0x1>
 132:	01 96       	adiw	r24, 0x01	; 1
 134:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <z+0x1>
 138:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <z>
 13c:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <z>
 140:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <z+0x1>
 144:	e0 50       	subi	r30, 0x00	; 0
 146:	ff 4f       	sbci	r31, 0xFF	; 255
 148:	80 81       	ld	r24, Z
 14a:	80 32       	cpi	r24, 0x20	; 32
 14c:	19 f7       	brne	.-58     	; 0x114 <main+0x44>
	{
		UDR0 = cmd5[z];
		_delay_ms(100);
	}

	UDR0 = ('"');
 14e:	e6 ec       	ldi	r30, 0xC6	; 198
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	82 e2       	ldi	r24, 0x22	; 34
 154:	80 83       	st	Z, r24
 156:	2f ef       	ldi	r18, 0xFF	; 255
 158:	81 ee       	ldi	r24, 0xE1	; 225
 15a:	94 e0       	ldi	r25, 0x04	; 4
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <main+0x8c>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0x96>
 166:	00 00       	nop
	_delay_ms(100);

	UDR0 = ('\r');
 168:	8d e0       	ldi	r24, 0x0D	; 13
 16a:	80 83       	st	Z, r24
 16c:	2f ef       	ldi	r18, 0xFF	; 255
 16e:	89 e6       	ldi	r24, 0x69	; 105
 170:	98 e1       	ldi	r25, 0x18	; 24
 172:	21 50       	subi	r18, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <main+0xa2>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0xac>
 17c:	00 00       	nop
	_delay_ms(500);

	for(z=0;cmd4[z]!=' ';z++)
 17e:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <z+0x1>
 182:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <z>
 186:	14 c0       	rjmp	.+40     	; 0x1b0 <main+0xe0>
	{
		UDR0 = cmd4[z];
 188:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	81 ee       	ldi	r24, 0xE1	; 225
 190:	94 e0       	ldi	r25, 0x04	; 4
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0xc2>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xcc>
 19c:	00 00       	nop
	_delay_ms(100);

	UDR0 = ('\r');
	_delay_ms(500);

	for(z=0;cmd4[z]!=' ';z++)
 19e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <z>
 1a2:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <z+0x1>
 1a6:	01 96       	adiw	r24, 0x01	; 1
 1a8:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <z+0x1>
 1ac:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <z>
 1b0:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <z>
 1b4:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <z+0x1>
 1b8:	e4 5f       	subi	r30, 0xF4	; 244
 1ba:	fe 4f       	sbci	r31, 0xFE	; 254
 1bc:	80 81       	ld	r24, Z
 1be:	80 32       	cpi	r24, 0x20	; 32
 1c0:	19 f7       	brne	.-58     	; 0x188 <main+0xb8>
	{
		UDR0 = cmd4[z];
		_delay_ms(100);
	}

	UDR0 = (26);
 1c2:	8a e1       	ldi	r24, 0x1A	; 26
 1c4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1c8:	2f ef       	ldi	r18, 0xFF	; 255
 1ca:	81 ee       	ldi	r24, 0xE1	; 225
 1cc:	94 e0       	ldi	r25, 0x04	; 4
 1ce:	21 50       	subi	r18, 0x01	; 1
 1d0:	80 40       	sbci	r24, 0x00	; 0
 1d2:	90 40       	sbci	r25, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <main+0xfe>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <main+0x108>
 1d8:	00 00       	nop
	_delay_ms(100);

	while(1)
	{

		b=rxvalue();
 1da:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 1de:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>

		while (b!='+') 
 1e2:	04 c0       	rjmp	.+8      	; 0x1ec <main+0x11c>
		{

			b=rxvalue();
 1e4:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 1e8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	while(1)
	{

		b=rxvalue();

		while (b!='+') 
 1ec:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 1f0:	8b 32       	cpi	r24, 0x2B	; 43
 1f2:	c1 f7       	brne	.-16     	; 0x1e4 <main+0x114>
		{

			b=rxvalue();

		}
		b=rxvalue();
 1f4:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 1f8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
		if(b=='C')
 1fc:	83 34       	cpi	r24, 0x43	; 67
 1fe:	69 f7       	brne	.-38     	; 0x1da <main+0x10a>
		{ b=rxvalue();
 200:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 204:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
			if(b=='M')
 208:	8d 34       	cpi	r24, 0x4D	; 77
 20a:	39 f7       	brne	.-50     	; 0x1da <main+0x10a>
			{
				b=rxvalue();
 20c:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 210:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
				if(b=='T')
 214:	84 35       	cpi	r24, 0x54	; 84
 216:	09 f7       	brne	.-62     	; 0x1da <main+0x10a>
				{
					b=rxvalue();
 218:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 21c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
					if(b==':')
 220:	8a 33       	cpi	r24, 0x3A	; 58
 222:	d9 f6       	brne	.-74     	; 0x1da <main+0x10a>
					{

						b=rxvalue();
 224:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 228:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
						while (b!=0x0a) 
 22c:	04 c0       	rjmp	.+8      	; 0x236 <main+0x166>
						{

							b=rxvalue();
 22e:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 232:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
					b=rxvalue();
					if(b==':')
					{

						b=rxvalue();
						while (b!=0x0a) 
 236:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 23a:	8a 30       	cpi	r24, 0x0A	; 10
 23c:	c1 f7       	brne	.-16     	; 0x22e <main+0x15e>
						{

							b=rxvalue();

						}
						b=rxvalue();
 23e:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 242:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>

						message[0]=b;
 246:	c1 e1       	ldi	r28, 0x11	; 17
 248:	d1 e0       	ldi	r29, 0x01	; 1
 24a:	88 83       	st	Y, r24
						b=rxvalue();
 24c:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 250:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
						message[1]=b;
 254:	89 83       	std	Y+1, r24	; 0x01
						b=rxvalue();
 256:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 25a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
						message[2]=b;
 25e:	8a 83       	std	Y+2, r24	; 0x02
						b=rxvalue();
 260:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 264:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
						message[3]=b;
 268:	8b 83       	std	Y+3, r24	; 0x03
						b=rxvalue();
 26a:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 26e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
						message[4]=b;
 272:	8c 83       	std	Y+4, r24	; 0x04
						b=rxvalue();
 274:	0e 94 5f 00 	call	0xbe	; 0xbe <rxvalue>
 278:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
						message[5]=b;
 27c:	8d 83       	std	Y+5, r24	; 0x05
 27e:	ad cf       	rjmp	.-166    	; 0x1da <main+0x10a>

00000280 <_exit>:
 280:	f8 94       	cli

00000282 <__stop_program>:
 282:	ff cf       	rjmp	.-2      	; 0x282 <__stop_program>
